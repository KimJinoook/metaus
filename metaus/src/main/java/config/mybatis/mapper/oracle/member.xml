<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.metaus.member.model.MemberDAO">
	<sql id="searchAndWhere">
		<if test="searchKeyword !=null and searchKeyword !=''">
			and (mem_nick like '%' || #{searchKeyword} || '%' or mem_id like '%' || #{searchKeyword} || '%')
        </if>
	</sql>
	
	<select id="selectPwd" parameterType="string" resultType="String">
		select mem_pw from fp_mem
		where mem_id=#{memId} and mem_outdate is null
	</select>
	<select id="selectLock" parameterType="string" resultType="String">
		select mem_lock from fp_mem
		where mem_id=#{memId} and mem_outdate is null
	</select>
	
	<select id="selectByUserid" parameterType="string" 
		resultType="memberVo">
      select * from fp_mem where mem_id=#{memId}
   	</select>
   	
   	<select id="selectBySocialid" parameterType="string" 
		resultType="memberVo">
      select * from fp_mem where mem_id like #{memId} || '%'
   	</select>
   	
   	<select id="findId" parameterType="MemberVO" resultType="string">
   		select mem_id from fp_mem where mem_name=#{memName} and mem_tel = #{memTel}
   	</select>
   	
   	<select id="findPw" parameterType="MemberVO" resultType="string">
   		select mem_lock from fp_mem where mem_name=#{memName} and mem_tel = #{memTel} and mem_id = #{memId}
   	</select>
   	
   	<select id="selectByMemNo" parameterType="int" 
		resultType="memberVo">
      select * from fp_mem where mem_no=#{memNo}
   	</select>
   	
   	<select id="duplicateId" parameterType="String" resultType="int">
		select count(*) from fp_mem 
		where mem_id=#{memId}
	</select>
	
	<select id="selectAllCreater" resultType="MemberVO" parameterType="SearchVO">
		select * from (
			select rownum as RNUM, R.* from(
				select A.*, (select count(*) from fp_port B where A.mem_no = B.mem_no) as memItem, (select count(*) from fp_contact C where A.mem_no = C.mem_no) as memComplete  from fp_mem A where mem_no in (select mem_no from fp_port)
				<include refid="searchAndWhere"></include>
			) R
		)
		where
		RNUM>#{firstRecordIndex} 
		<![CDATA[	
		and RNUM<=#{firstRecordIndex} + #{recordCountPerPage} ]]>
	</select>
	
	<!-- 의뢰 지원자 현황 - 한용민 -->
	<select id="selectCreaterByRecNo" parameterType="HashMap" resultType="MemberVO">
		select * from (
			select rownum as RNUM, R.* from(
				select  A.mem_no, a.mem_name, a.mem_id, a.mem_pw, a.mem_nick, a.mem_birth, a.mem_tel, a.mem_zipcode, a.mem_add, a.mem_add2, a.mem_pic, a.mem_joindate
				, a.mem_outdate, a.mem_cutdate, a.mem_warncnt, a.mem_lock, a.mem_kakao, a.mem_naver, a.mem_facebook,
				(select count(*) from fp_port B where A.mem_no = B.mem_no) as memItem, 
				(select count(*) from fp_contact C where A.mem_no = C.mem_no) as memComplete  
				from memberViewByRecNo A where mem_no in (select mem_no from fp_port) and A.rec_no=#{recNo}
				<include refid="searchAndWhere"></include>
			) R
		)
		where
		RNUM>#{firstRecordIndex} 
		<![CDATA[	
		and RNUM<=#{firstRecordIndex} + #{recordCountPerPage} ]]>
	</select>
	
	<select id="selectPortByMenNo" resultType="PortfolioVO" parameterType="int">
		select * from fp_port where mem_no = #{memNo}
	</select>
   	
   	<select id="getTotalRecord" resultType="int" parameterType="SearchVO">
		
		select count(*) from fp_mem A where mem_no in (select mem_no from fp_port)
		<include refid="searchAndWhere"></include>
	
	</select>
	
	<!-- 의뢰 지원자 현황 - 한용민 -->
	<select id="getTotalRecordByrecNo" resultType="int" parameterType="map">
		select count(*) from memberViewByRecNo where mem_no in (select mem_no from fp_port) and rec_no=#{recNo}
		<include refid="searchAndWhere"></include>
	</select>
	
	<select id="getAllMemNoPort" resultType="int">
		select count(*) from fp_mem A where mem_no not in (select mem_no from fp_port)
	</select>
	
	<select id="sumPayToday" resultType="String">
		select sum(nvl(pay_price,0)) from fp_pay
		where pay_date > to_date(sysdate,'yy-MM-dd')
	</select>
   	
   	
   	<update id="updatePw" parameterType="MemberVO">
		update fp_mem
		set mem_pw = #{memPw}, mem_lock = #{memLock}
		where mem_id=#{memId}
	</update>
	
	<update id="updateKakao" parameterType="int">
		update fp_mem
		set mem_kakao = 'Y'
		where mem_no=#{memNo}
	</update>
	<update id="updateNaver" parameterType="int">
		update fp_mem
		set mem_naver = 'Y'
		where mem_no=#{memNo}
	</update>
	<update id="updateFacebook" parameterType="int">
		update fp_mem
		set mem_facebook = 'Y'
		where mem_no=#{memNo}
	</update>
	
	<update id="unlockMember" parameterType="int">
		update fp_mem
		set mem_cutdate = null
		where mem_no=#{memNo}
	</update>
	<update id="lockMember" parameterType="MemberVO">
		update fp_mem
		set mem_cutdate = #{memCutdate}
		where mem_no=#{memNo}
	</update>
	<update id="warnCntUp" parameterType="MemberVO">
		update fp_mem
		set mem_warncnt = #{memWarncnt}
		where mem_no=#{memNo}
	</update>
	
	<insert id="insertMember" parameterType="memberVo">
		<selectKey resultType="int" keyProperty="memNo" order="BEFORE">
			select fp_mem_seq.nextval from dual
		</selectKey>
		insert into fp_mem(mem_no,mem_name,mem_id,mem_pw,mem_nick,mem_birth,mem_tel,mem_zipcode,mem_add,mem_add2,mem_joindate, mem_lock)
		values(#{memNo}, #{memName}, #{memId}, #{memPw}, 
			#{memNick},#{memBirth}, #{memTel},#{memZipcode}, #{memAdd}, 
			#{memAdd2}, sysdate, #{memLock})
	</insert>
   	<select id="selectAll" resultType="memberVo">
   		select * from fp_mem
   	</select>
   	
   	<!-- 회원 정보 수정 - 최재훈  -->
   	<update id="updateMember" parameterType="memberVo">
   		update fp_mem
		set mem_name=#{memName}, mem_nick=#{memNick}, mem_birth=#{memBirth},
		mem_tel=#{memTel}, mem_zipcode=#{memZipcode}, mem_add=#{memAdd}, mem_add2=#{memAdd2},
		mem_pic=#{memPic}
		where mem_no=#{memNo}
   	</update>
	
</mapper>





